name: ci

# when to trigger a build named 'ci': every PR and push to a remote branch
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: sarahha/compound7:latest

  openfaas:
    runs-on: ubuntu-latest
    steps:
    # set up Docker and OpenFaaS
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get faas-cli
        run: curl -sLSf https://cli.openfaas.com | sudo sh
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get TAG
        id: get_tag
        run: echo ::set-output name=TAG::latest-dev
      - name: Get Repo Owner
        id: get_repo_owner
        run: >
          echo ::set-output name=repo_owner::$(echo ${{ github.repository_owner }} |
          tr '[:upper:]' '[:lower:]')

    # Login to docker hub
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    # Build docker image via faas-cli
      - name: Build image
        run: >
          faas-cli build -f ./compound7.yml

    # Push image to docker hub
      - name: Docker push image
        run: >
          docker push ${{secrets.DOCKERHUB_USERNAME}}/compound7

    # Login to OpenFaaS and deploy function
      # - name: OpenFaaS Login
      #   run: >
      #     faas-cli login -u admin -p admin --gateway ${{secrets.OPENFAAS_URL}}
      
      # - name: Deploy
      #   run: >
      #     OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
      #     TAG="${{ github.sha }}"
      #     faas-cli deploy --gateway ${{secrets.OPENFAAS_URL}}
 